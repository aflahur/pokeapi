{"version":3,"sources":["services/pokemon.js","helper/pokemonTypes.js","components/Card/Card.js","components/Card/index.js","components/Navbar/Navbar.js","components/Navbar/index.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["getAllPokemon","url","a","Promise","resolve","reject","fetch","then","res","json","data","getPokemon","typeColors","bug","dragon","fairy","fire","ghost","ground","normal","pyshic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","Card","pokemon","className","src","sprites","front_default","alt","name","onClick","event","window","location","href","types","map","type","style","backgroundColor","pokemonType","weight","height","abilities","ability","Navbar","NavBar","App","useState","pokemonData","setPokemonData","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","initialUrl","useEffect","response","next","previous","loadingPokemon","results","fetchData","prev","all","pokemonRecord","_pokemonData","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2c089ae.chunk.js","sourcesContent":["export async function getAllPokemon(url){\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data);\r\n            })\r\n    })\r\n}\r\n\r\nexport async function getPokemon(url) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                resolve(data);\r\n            });\r\n    })\r\n}","const typeColors = {\r\n\r\n    bug: '#729f3f',\r\n\r\n    dragon: '#53a4cf',\r\n\r\n    fairy: '#fdb9e9',\r\n\r\n    fire: '#fd7d24',\r\n\r\n    ghost: '#7b62a3',\r\n\r\n    ground: '#f7de3f',\r\n\r\n    normal: '#a4acaf',\r\n\r\n    pyshic: '#f366b9',\r\n\r\n    steel: '#9eb7',\r\n\r\n    dark: '#707070',\r\n\r\n    electric: '#eed535',\r\n\r\n    fighting: '#d56723',\r\n\r\n    flying: '#3dc7ef',\r\n\r\n    grass: '#9bcc50',\r\n\r\n    ice: '#51c4e7',\r\n\r\n    poison: '#b92fc9',\r\n\r\n    rock: '#a38c21',\r\n\r\n    water: '#4592c4'\r\n\r\n}\r\n\r\n\r\n\r\nexport default typeColors;","import React from 'react';\r\nimport './style.css';\r\nimport pokemonType from '../../helper/pokemonTypes'\r\nimport Detail from '../Detail/detail';\r\n\r\nfunction Card({ pokemon }) {\r\n    return (\r\n        <div className=\"Card\">\r\n            <div className=\" Card__img\">\r\n                <img src={pokemon.sprites.front_default} alt=\"\" />\r\n            </div>\r\n            <div className=\"Card__name\">\r\n                {pokemon.name}\r\n            </div>\r\n            <div className=\"container\">\r\n                <button onClick={event =>  window.location.href='../Detail/detail.js'}>Detail</button>\r\n            </div>\r\n            <div className=\"Card__types\">\r\n                {\r\n                    pokemon.types.map( type => {\r\n                    return (\r\n                        <div className='Card__type'  style={{ backgroundColor: pokemonType[type.type.name] }}>\r\n                            {type.type.name}\r\n                        </div>\r\n                    )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"Card__info\">\r\n                <div className='Card__data Card__data--weight'>\r\n                    <p className='title'>Weight</p>\r\n                    <p>{pokemon.weight}</p>\r\n                </div>\r\n                <div className='Card__data Card__data--height'>\r\n                    <p className='title'>Height</p>\r\n                    <p>{pokemon.height}</p>\r\n                </div>\r\n                <div className='Card__data Card__data--ability'>\r\n                    <p className='title'>Ability</p>\r\n                    <p>{pokemon.abilities[0].ability.name}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import Card from './Card';\r\n\r\nexport default Card;","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div className='Navbar'>\r\n            POKEMON USING REACT\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import NavBar from './Navbar';\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState, useEffect}  from 'react';\nimport { getAllPokemon, getPokemon } from './services/pokemon';\nimport Card from './components/Card';\nimport Navbar from './components/Navbar';\nimport logo from './logo.svg';\nimport './App.css';\nimport Detail from './components/Detail/detail';\n\nfunction App() {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [nextUrl, setNextUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [detailUrl, setDetailUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const initialUrl = 'https://pokeapi.co/api/v2/pokemon';\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await getAllPokemon(initialUrl);\n      setNextUrl(response.next);\n      setPrevUrl(response.previous);\n      await loadingPokemon(response.results);\n      setLoading(false);\n    }\n    fetchData();\n  }, []);\n\n  const next = async () => {\n    setLoading(true);\n    let data = await getAllPokemon(nextUrl)\n    await loadingPokemon(data.results)\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  }\n\n  const prev = async () => {\n    if (!prevUrl) return;\n    setLoading(true);\n    let data = await getAllPokemon(prevUrl)\n    await loadingPokemon(data.results)\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  }\n\n\n  const loadingPokemon = async (data) => {\n    let _pokemonData = await Promise.all(\n      data.map(async pokemon => {\n        let pokemonRecord = await getPokemon(pokemon.url);\n        return pokemonRecord;\n      })\n    );\n      \n      setPokemonData(_pokemonData);\n  };\n\n  return (\n    <div> \n      {\n        loading ? <h1>loading...</h1> : (\n          <>\n          <Navbar />\n          <div className=\"btn\">\n            <button onClick={prev}>Prev</button>\n            <button onClick={next}>Next</button>\n          </div>\n            <div className=\"grid-container\">\n              {pokemonData.map((pokemon, i) => {\n                return <Card key={i} pokemon={pokemon}/>\n              })}\n            </div>\n          <div className=\"btn\">\n            <button onClick={prev}>Prev</button>\n            <button onClick={next}>Next</button>\n          </div>\n          </>\n        )\n      }\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}